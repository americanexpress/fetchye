import e,{useRef as t}from"react";const r="@fetchye",n="@fetchye/IS_LOADING",a="@fetchye/SET_DATA",c="@fetchye/DELETE_DATA",o="@fetchye/ERROR",h="@fetchye/CLEAR_ERROR";function u({hash:e}){return{type:"@fetchye/IS_LOADING",hash:e}}function s({hash:e,value:t}){return{type:"@fetchye/SET_DATA",hash:e,value:t}}function f({hash:e}){return{type:"@fetchye/DELETE_DATA",hash:e}}function y({hash:e,error:t}){return{type:"@fetchye/ERROR",hash:e,error:t}}function i({hash:e}){return{type:"@fetchye/CLEAR_ERROR",hash:e}}const R=(e,t)=>e.data===t.data&&e.error===t.error&&e.loading===t.loading;var d=e.createContext,E={};const l=function(e,t){if(!t)return console.warn("Second parameter in createSharedReactContext was not set, defaulting to React.createContext"),d(e);if(E[t])return E[t];var r=d(e);return E[t]=r,r}(null,"FetchyeContext"),A=(e=[])=>[...e].reduce(((e,[t,r])=>(e[t]=r,e)),{}),p=async(e,t,r)=>{let n,a,c;try{n=await e(t,r);a={body:await n.json(),ok:n.ok,headers:A(n.headers),status:n.status}}catch(e){console.error(e),c=e}return{payload:a,error:c}},D=()=>{const e=t(new Set);return[function(){e.current.forEach((e=>{e()}))},function(t){return e.current.add(t),()=>{e.current.delete(t)}}]};export{r as ACTION_NAMESPACE,h as CLEAR_ERROR,c as DELETE_DATA,o as ERROR,l as FetchyeContext,n as IS_LOADING,a as SET_DATA,i as clearErrorsAction,R as defaultEqualityChecker,p as defaultFetcher,f as deleteAction,y as errorAction,u as loadingAction,s as setAction,D as useSubscription};
