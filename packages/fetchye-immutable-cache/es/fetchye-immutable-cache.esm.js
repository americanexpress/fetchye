import{Map as e,Set as t}from"immutable";import{ACTION_NAMESPACE as r,SET_DATA as a,IS_LOADING as n,ERROR as o,CLEAR_ERROR as s,DELETE_DATA as h}from"fetchye-core";function d(d=e({errors:e(),loading:t(),data:e()}),c){if(!c.type.startsWith(r))return d;switch(c.type){case h:return d.deleteIn(["data",c.hash]);case s:return d.deleteIn(["errors",c.hash]);case o:return d.withMutations((e=>e.setIn(["errors",c.hash],c.error).deleteIn(["loading",c.hash])));case n:return d.updateIn(["loading"],(e=>e.add(c.hash)));case a:return d.withMutations((e=>e.deleteIn(["loading",c.hash]).setIn(["data",c.hash],c.value)));default:return d}}const c=(t=e(),r)=>({data:t.getIn(["data",r]),loading:t.hasIn(["loading",r]),error:t.getIn(["errors",r])});function i({cacheSelector:e=(e=>e)}={}){return{getCacheByKey:c,reducer:d,cacheSelector:e}}export{i as ImmutableCache};
