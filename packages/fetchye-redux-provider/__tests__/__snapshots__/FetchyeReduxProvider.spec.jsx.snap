// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FetchyeReduxProvider should have loading state change when data is populated 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "data": undefined,
        "error": undefined,
        "loading": true,
        "query": undefined,
      },
    ],
    Array [
      Object {
        "data": "val1",
        "error": undefined,
        "loading": false,
        "query": undefined,
      },
    ],
    Array [
      Object {
        "data": undefined,
        "error": undefined,
        "loading": false,
        "query": undefined,
      },
    ],
    Array [
      Object {
        "data": undefined,
        "error": undefined,
        "loading": false,
        "query": undefined,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`FetchyeReduxProvider should return a stable response from useFetchyeSelector that changes properly with a changed input 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "data": "val1",
        "error": undefined,
        "loading": false,
        "query": undefined,
      },
    ],
    Array [
      Object {
        "data": "val1",
        "error": undefined,
        "loading": false,
        "query": undefined,
      },
    ],
    Array [
      Object {
        "data": "val2",
        "error": undefined,
        "loading": false,
        "query": undefined,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
